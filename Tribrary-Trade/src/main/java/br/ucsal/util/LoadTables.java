package br.ucsal.util;

import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;

public class LoadTables {

	public void creatScherma(Connection c) throws SQLException {

		Statement stmt = c.createStatement();
		stmt.executeUpdate("create table usuario(\r\n" + 
				"id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,\r\n" + 
				"nome varchar(25) not null,\r\n" + 
				"nome_social varchar(45) not null,\r\n" + 
				"cpf varchar(14) not null,\r\n" + 
				"email varchar(45) not null,\r\n" + 
				"telefone varchar(14) not null,\r\n" + 
				"pontos_troca integer,\r\n" + 
				"conta_ativa boolean,\r\n" + 
				"senha varchar(45) not null\r\n" + 
				");");

		stmt.executeUpdate("create table endereco(\r\n"
				+ "id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,\r\n"
				+ "cep varchar(9) not null,\r\n" + "cidade varchar(50) not null,\r\n"
				+ "bairro varchar(50) not null,\r\n" + "rua varchar (50) not null,\r\n" + "numero varchar(4),\r\n"
				+ "id_usuario integer,\r\n" + "foreign key(id_usuario) references usuario(id)\r\n" + ");");

		stmt.executeUpdate("create table genero(\r\n"
				+ "id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,\r\n"
				+ "nome varchar(50) not null\r\n" + ");");

		stmt.executeUpdate("create table livro(\r\n" + 
				"id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,\r\n" + 
				"titulo varchar(50) not null,\r\n" + 
				"autor varchar(50) not null,\r\n" + 
				"sinopse varchar(1000) not null,\r\n" + 
				"detalhes varchar(1000) not null,\r\n" + 
				"foto_livro varchar(150) not null,\r\n" + 
				"disponibilidade boolean not null,\r\n" + 
				"id_genero integer,\r\n" + 
				"id_usuario integer,\r\n" + 
				"foreign key(id_genero) references genero(id),\r\n" + 
				"foreign key(id_usuario) references usuario(id)\r\n" + 
				");");

		stmt.executeUpdate("create table notificacao(\r\n" + 
				"id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,\r\n" + 
				"id_livro_desejado integer,\r\n" + 
				"id_usuario_solicitante integer,\r\n" + 
				"status varchar(50) not null,\r\n" + 
				"foreign key(id_livro_desejado) references livro(id),\r\n" + 
				"foreign key(id_usuario_solicitante) references usuario(id)\r\n" + 
				");");

		stmt.executeUpdate("create table livro_usuario(\r\n" + 
				"id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,\r\n" + 
				"id_livro integer,\r\n" + 
				"id_notificacao integer,\r\n" + 
				"foreign key(id_livro) references livro(id),\r\n" + 
				"foreign key(id_notificacao) references notificacao(id)\r\n" + 
				");");

		stmt.executeUpdate("create table troca(\r\n"
				+ "id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,\r\n"
				+ "data date,\r\n" + "localidade varchar(50),\r\n" + "status varchar(50)\r\n" + ");");

		stmt.executeUpdate("create table livro_troca(\r\n"
				+ "id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,\r\n"
				+ "id_livro integer,\r\n" + "id_troca integer,\r\n" + "foreign key(id_livro) references livro(id),\r\n"
				+ "foreign key(id_troca) references troca(id)\r\n" + ");");

		
		
		stmt.close();
		c.close();
	}
}
